#include "dot/node.h"

////////////////////////////////////////////////////////////////
// Standard includes.
////////////////////////////////////////////////////////////////

#include <format>

////////////////////////////////////////////////////////////////
// Current target includes.
////////////////////////////////////////////////////////////////

#include "dot/graph.h"

namespace dot
{
    Node::Node(Graph& parent, const size_t index) : graph(&parent), index(index) {}

    ////////////////////////////////////////////////////////////////
    // Write.
    ////////////////////////////////////////////////////////////////

    void Node::write(std::ostream& out) const
    {
        // Write ID.
        out << "    " << getName() << " ";

        // Write attributes.
        out << "[";
        AttributeMap::write(out);
        out << "]";
    }

    ////////////////////////////////////////////////////////////////
    // Getters and setters.
    ////////////////////////////////////////////////////////////////

    size_t Node::getIndex() const noexcept { return index; }

    std::string Node::getName() const { return std::format("{0}.{1}", graph->getIndex(), index); }

}  // namespace dot
